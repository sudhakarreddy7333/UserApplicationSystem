@model UserApplicationSystem.BusinessModels.UserFamilyModel

@{
    ViewBag.Title = "Create Application";
}

<h2>Create Application</h2>
<span class="pull-right mandatory">* Required fields</span>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="col-lg-12 form-group">
        <div class="form-group col-lg-2">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
            <span class="mandatory">*</span>
            <div>
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-lg-2">
            @Html.LabelFor(model => model.LastName, "Lastname", htmlAttributes: new { @class = "control-label " })
            <span class="mandatory">*</span>
            <div class="col-lg-12">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-lg-2">
            @Html.LabelFor(model => model.MiddleName, "Middlename", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-lg-2">
            @Html.LabelFor(model => model.Suffix, "Suffix", htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.RadioButtonFor(model => model.Suffix, "Mr") Mr
                @Html.RadioButtonFor(model => model.Suffix, "Mrs") Ms
            </div>
        </div>
    </div>

    <div class="col-lg-12 form-group">
        <div class="form-group col-lg-2">
            @Html.LabelFor(model => model.Email, "Email Id", htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group col-lg-2">
            <div class="col-lg-12">
                @Html.LabelFor(model => model.Gender, "Gender", htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.RadioButtonFor(model => model.Gender, "Male") Male
                    @Html.RadioButtonFor(model => model.Gender, "Female") Female
                </div>
            </div>
        </div>

        <div class="form-group col-lg-3">
            @Html.LabelFor(model => model.Dob, "Date of Birth", htmlAttributes: new { @class = "control-label" })
            <span class="mandatory">*</span>
            <div class="col-lg-12">
                @Html.TextBoxFor(model => model.Dob, new {id = "datepicker",@type = "date", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add Member" class="btn btn-success pull-right" />
        </div>
    </div>
    <div>
        <input type="button" value="Save and Exit" class="btn btn-success" />
        <div class="pull-right">
            <input type="button" value="Back" class="btn btn-success" />
            <input type="button" value="Next" class="btn btn-success" />
        </div>
    </div>
</div>
}

    

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

